---
version: "3.2"

secrets: # {{{
  duckdns_token:
    file: ./secrets/duckdns_token.txt
  rd_api_key:
    file: ./secrets/rd_api_key.txt
  plex_user:
    file: ./secrets/plex_user.txt
  plex_token:
    file: ./secrets/plex_token.txt
  plex_address:
    file: ./secrets/plex_address.txt
  seerr_api_key:
    file: ./secrets/seerr_api_key.txt
  seerr_address:
    file: ./secrets/seerr_address.txt # }}}

include: # {{{
  - monitoring/compose.yml # }}}

services:

  pd_zurg: # {{{
    image: iampuid0/pd_zurg:latest
    container_name: pd_zurg
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    volumes:
      - /pd_zurg/config:/config
      - /pd_zurg/log:/log
      - /pd_zurg/cache:/cache
      - /pd_zurg/RD:/zurg/RD
      - /pd_zurg/mnt:/data:shared
    environment:
      - TZ=${TZ}
        ## Zurg Required Settings
      - ZURG_ENABLED=true
        # - RD_API_KEY=SECRET
        ## Zurg Optional Settings
        # - ZURG_LOG_LEVEL=DEBUG
        # - ZURG_VERSION=v0.9.2-hotfix.4
      - ZURG_UPDATE=true
      - PLEX_REFRESH=true
      - PLEX_MOUNT_DIR=/torrents
        ## Rclone Required Settings
      - RCLONE_MOUNT_NAME=pd_zurg
        ## Rclone Optional Settings - See rclone docs for full list
        # - RCLONE_LOG_LEVEL=DEBUG
        # - RCLONE_CACHE_DIR=/cache
      - RCLONE_DIR_CACHE_TIME=10s
        # - RCLONE_VFS_CACHE_MODE=full
        # - RCLONE_VFS_CACHE_MAX_SIZE=100G
        # - RCLONE_ATTR_TIMEOUT=8700h
        # - RCLONE_BUFFER_SIZE=32M
        # - RCLONE_VFS_CACHE_MAX_AGE=4h
        # - RCLONE_VFS_READ_CHUNK_SIZE=32M
        # - RCLONE_VFS_READ_CHUNK_SIZE_LIMIT=1G
        # - RCLONE_TRANSFERS=8
        ## Plex Debrid Required Settings
      - PD_ENABLED=true
        ## To utilize plex_debrid with Plex, the following environment variables are required
        # - PLEX_USER=SECRET
        # - PLEX_TOKEN=SECRET
        # - PLEX_ADDRESS=SECRET
        ## To utilize plex_debrid with Jellyfin, the following environment variables are required - Note that plex_debrid will require addtional setup befor use with Jellyfin
        # - JF_ADDRESS
        # - JF_API_KEY
        ## Plex Debrid Optional Settings
      - PD_UPDATE=true
      - SHOW_MENU=false
        # - SEERR_API_KEY=SECRET
        # - SEERR_ADDRESS=SECRET
        ## Special Features
        # - AUTO_UPDATE_INTERVAL=12
        # - DUPLICATE_CLEANUP=true
        # - CLEANUP_INTERVAL=1
        # - PDZURG_LOG_LEVEL=DEBUG
        # - PDZURG_LOG_COUNT=2
        # Example to attach to gluetun vpn container if realdebrid blocks IP address
        # network_mode: container:gluetun
    devices:
      - /dev/fuse:/dev/fuse:rwm
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
      - no-new-privileges
    secrets:
      - plex_address
      - plex_token
      - plex_user
      - rd_api_key
      - seerr_address
      - seerr_api_key
    healthcheck:
      interval: 10s
    restart: unless-stopped # }}}

  duckdns: # {{{
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SUBDOMAINS=novick
      - FILE__TOKEN=/run/secrets/duckdns_token
    volumes:
      - ${CONFIG_ROOT}/duckdns:/config
    restart: unless-stopped
    secrets:
      - duckdns_token # }}}

  nginx-proxy-manager: # {{{
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - TP_THEME=${THEME}
    ports:
      - '80:80'   # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81'   # Admin Web Port
    volumes:
      - ${CONFIG_ROOT}/nginx/data:/data
      - ${CONFIG_ROOT}/nginx/letsencrypt:/etc/letsencrypt
      - ${CONFIG_ROOT}/nginx/98-themepark:/etc/cont-init.d/98-themepark
    restart: unless-stopped # }}}

  qbittorrentvpn: # {{{
    container_name: qbittorrentvpn
    image: ghcr.io/hotio/qbittorrent
    ports:
      - "8080:8080"
      - "8118:8118"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - VPN_ENABLED=true
      - VPN_LAN_NETWORK=192.168.29.0/24
      - VPN_CONF=wg0
      - VPN_ADDITIONAL_PORTS
      - PRIVOXY_ENABLED=false
    volumes:
      - ${CONFIG_ROOT}/qbittorrentvpn:/config
      - ${DATA_ROOT}/torrents:/data/torrents
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1 # }}}

  sabnzbd: # {{{
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sabnzbd
      - TP_THEME=${THEME}
    volumes:
      - ${CONFIG_ROOT}/sabnzbd:/config
      - ${DATA_ROOT}/usenet:/data/usenet
    ports:
      - "8081:8080" # web UI
    restart: unless-stopped # }}}

  plex: # {{{
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:plex
      - TP_THEME=${THEME}
    volumes:
      - ${CONFIG_ROOT}/plex:/config
      - ${DATA_ROOT}/media:/data/media
      - /pd_zurg/mnt/pd_zurg/:/torrents
    depends_on:
      pd_zurg:
        condition: service_healthy
    restart: unless-stopped # }}}

  # jellyfin: # {{{
  #   image: lscr.io/linuxserver/jellyfin:latest
  #   container_name: jellyfin
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ${CONFIG_ROOT}/jellyfin:/config
  #     - ${DATA_ROOT}/media:/data/media
  #   devices:
  #     - /dev/dri:/dev/dri
  #   ports:
  #     - 8096:8096     # HTTP web UI
  #     - 8920:8920     # HTTPS web UI (optional)
  #     - 7359:7359/udp # Jellyfin client discovery (optional)
  #     - 1900:1900/udp # DLNA client discovery (optional)
  #   restart: unless-stopped # }}}

  tautulli: # {{{
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:tautulli
      - TP_THEME=${THEME}
    volumes:
      - ${CONFIG_ROOT}/tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped # }}}

  prowlarr: # {{{
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${THEME}
    volumes:
      - ${CONFIG_ROOT}/prowlarr:/config
    ports:
      - "9696:9696"
    restart: unless-stopped # }}}

  radarr: # {{{
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${THEME}
    volumes:
      - ${CONFIG_ROOT}/radarr:/config
      - ${DATA_ROOT}:/data
    ports:
      - "7878:7878"
    restart: unless-stopped # }}}

  sonarr: # {{{
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${THEME}
    volumes:
      - ${CONFIG_ROOT}/sonarr:/config
      - ${DATA_ROOT}:/data
    ports:
      - "8989:8989"
    restart: unless-stopped # }}}

  overseerr: # {{{
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/overseerr:/config
    ports:
      - "5055:5055"
    restart: unless-stopped # }}}

  bazarr: # {{{
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/bazarr:/config
      - ${DATA_ROOT}/media:/data/media
    ports:
      - 6767:6767
    restart: unless-stopped # }}}

# vim:fdm=marker
